name: Deploy the website
on:
  workflow_dispatch:
    inputs:
      env:
        required: true
        type: choice
        default: staging.mariogemoll.com
        options:
          - staging.mariogemoll.com
          - mariogemoll.com
jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
  
      - name: Install dependencies
        run: |
          pip install -r requirements-build.txt

      - name: Build the website
        run: python makesite.py

      - name: Set up SSH key
        if: success()
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy the build directory to the server using scp
        if: success()
        run: |
          ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "rm -rf /tmp/${{ inputs.env }}.new"
          ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mkdir -p /tmp/${{ inputs.env }}.new"
          scp -i ~/.ssh/deploy_key -rp build/* build/.htaccess "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/${{ inputs.env }}.new"

      - name: Back up the current website
        if: success()
        run: |
          ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "rm -rf /tmp/${{ inputs.env }}.bak"
          ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mkdir -p /tmp/${{ inputs.env }}.bak"
          ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mv /${{ inputs.env }}/httpdocs/* /tmp/${{ inputs.env }}.bak/"
          ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mv /${{ inputs.env }}/httpdocs/.htaccess /tmp/${{ inputs.env }}.bak/"

      - name: Move new files to the live directory
        if: success()
        run: |
          ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mv /tmp/${{ inputs.env }}.new/* /tmp/${{ inputs.env }}.new/.htaccess /${{ inputs.env }}/httpdocs/"

      - name: Remove temporary directories
        if: success()
        run: |
          ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "rm -rf /tmp/${{ inputs.env }}.bak"
          ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "rm -rf /tmp/${{ inputs.env }}.new"
