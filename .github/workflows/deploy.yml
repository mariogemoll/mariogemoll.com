name: Deploy the website
on:
  workflow_dispatch:
    inputs:
      env:
        required: true
        type: choice
        default: staging.mariogemoll.com
        options:
          - staging.mariogemoll.com
          - mariogemoll.com
jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22.x
      
    - name: Install dependencies
      run: npm i

    - name: Compile TypeScript
      run: npx tsc
    
    - name: Build the website
      run: node dist/makesite.js

    - name: Set up SSH key
      if: success()
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Copy the build directory to the server using scp
      if: success()
      run: |
        ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "rm -rf /tmp/${{ inputs.env }}.new"
        ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mkdir -p /tmp/${{ inputs.env }}.new"
        scp -i ~/.ssh/deploy_key -rp build/* build/.htaccess "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/${{ inputs.env }}.new"

    - name: Back up the current website
      if: success()
      run: |
        ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "rm -rf /tmp/${{ inputs.env }}.bak"
        ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mkdir -p /tmp/${{ inputs.env }}.bak"
        ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mv /${{ inputs.env }}/httpdocs/* /tmp/${{ inputs.env }}.bak/"
        ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mv /${{ inputs.env }}/httpdocs/.htaccess /tmp/${{ inputs.env }}.bak/"

    - name: Move new files to the live directory
      if: success()
      run: |
        ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mv /tmp/${{ inputs.env }}.new/* /tmp/${{ inputs.env }}.new/.htaccess /${{ inputs.env }}/httpdocs/"

    - name: Remove temporary directories
      if: success()
      run: |
        ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "rm -rf /tmp/${{ inputs.env }}.bak"
        ssh -i ~/.ssh/deploy_key "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "rm -rf /tmp/${{ inputs.env }}.new"
